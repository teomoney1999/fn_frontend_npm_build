{"version":3,"sources":["objects/Filter/Filter.module.css","objects/Filter/Filter.js","pages/Filter/Filter.js","pages/Transactions/Transactions.js","UI/Card/Card.js","UI/Card/Card.module.css","hooks/use-http.js","UI/Button/ButtonGroup/Buttons.js","UI/Button/ButtonGroup/Buttons.module.css","UI/SelectBox/SelectBox.js","UI/SelectBox/SelectBox.module.css","UI/Table/NoResultNoti/NoResultNoti.module.css","UI/Table/Table.module.css","objects/AdminForm/CollectionView/CollectionView.module.css","helpers/commonHelper.js","UI/Table/NoResultNoti/NoResultNoti.js","UI/Table/Table.js","objects/AdminForm/CollectionView/CollectionView.js"],"names":["module","exports","Filter","props","useState","Date","value","setValue","isValueTouched","setIsValueTouched","type","setType","filterPattern","date","Card","className","classes","card","SelectBox","id","valuesList","textField","valueField","onChange","event","target","format","onBlur","Buttons","btnList","btnClasses","name","onClick","onEnableFilter","bind","isShown","onDisableFilter","action","dispatch","useDispatch","data","useEffect","length","filterAction","setData","setTriggerFilter","triggerFilter","formattingHelper","dateToTimestamp","setFilteredData","condition","Transactions","apiEndpoint","history","useHistory","userId","useSelector","state","auth","transactionsList","setTransactionsList","useHttp","getMany","user_id","getAllTransactions","sendRequest","status","error","transactions","sortedData","useMemo","sortByField","field","dataSource","filteredData","filter","notificationAction","notify","message","fields","label","template","rowObj","parseInt","amount","toLocaleString","style","currency","textAlign","dataView","transaction_type","toLowerCase","color","Helper","timestampToDate","created_at","CollectionView","title","navigateDestination","onGoBack","goBack","children","httpReducer","responseData","errorMessage","requestFunction","useReducer","httpState","dispatchHttpState","useCallback","requestData","a","btnGroup","map","btn","handleClick","React","memo","selectRef","useRef","control","htmlFor","ref","index","args","Array","slice","sort","b","NoResultNoti","noti","colSpan","lang","Table","tableWrapper","overflowX","overflowY","table","toString","tdProps","key","generateId","hasOwnProperty","width","to","onNavigate","textDecoration","Button","btnClass"],"mappings":"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","file":"static/js/5.684a96d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Filter_card__1gH-r\",\"card-input\":\"Filter_card-input__HdkNU\",\"action\":\"Filter_action__FdxxD\"};","import React, { useState } from 'react';\nimport DateRangePicker from '@wojtekmaj/react-daterange-picker';\n\n\n// UI\nimport Card from '../../UI/Card/Card';\nimport SelectBox from '../../UI/SelectBox/SelectBox';\nimport Buttons from '../../UI/Button/ButtonGroup/Buttons';\n\nimport classes from './Filter.module.css';\nimport btnClasses from '../../UI/Button/Button.module.css';\n\n\nconst Filter = (props) => {\n    const [value, setValue] = useState([new Date(), new Date()]);\n    const [isValueTouched, setIsValueTouched] = useState(false);\n\n    const [type, setType] = useState('thu');\n\n    let filterPattern = isValueTouched ? { type, date: value } : { type }; \n\n    // EVENT HANDLER\n    const onChangeType = (event) => {\n        setType(event.target.value);\n    }\n\n    const onBlurDatepicker = (event) => {\n        setIsValueTouched(true);\n    }\n\n    return (\n        <Card className={ classes.card }>\n            <SelectBox \n                id='type' \n                valuesList={ [\n                    {textField: 'Thu', valueField: 'thu'},\n                    {textField: 'Chi', valueField: 'chi'}\n                ] }\n                value={ type || 'thu' }\n                onChange={ onChangeType }\n            />\n                  \n            <DateRangePicker\n                value={value}\n                format={\"dd-MM-y\"} \n                onChange={ setValue } \n                onBlur={ onBlurDatepicker }         \n            />\n\n            <Buttons \n                btnList={ [\n                    {\n                        className: btnClasses['button-success'], \n                        type: 'submit', \n                        name: 'Tìm kiếm', \n                        onClick: props.onEnableFilter.bind(null, filterPattern),\n                        isShown: true,\n                    },\n                    {\n                        className: btnClasses['button-danger'], \n                        type: 'submit',\n                        name: 'Xoá bộ lọc',\n                        onClick: props.onDisableFilter,      \n                        isShown: true,                 \n                    }\n                ] }\n                className={ classes.action }\n            />\n                  \n        </Card>\n    );\n}\n\n\nexport default Filter;","import { lazy, useEffect } from 'react';\n// REDUX\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterAction } from '../../stores/filter/filter-slice';\n// HELPER\nimport formattingHelper from '../../helpers/formatingHelper';\n// COMPONENT\nimport FilterView from '../../objects/Filter/Filter';\n// const FilterView = lazy(() => import('../../objects/Filter/Filter'));\n\nconst Filter = (props) => {\n    const dispatch = useDispatch();\n\n    const { data } = props; \n\n    useEffect(() => {\n        if (!data.length) return;\n\n        dispatch(filterAction.setData(data));\n    }, [data]);\n\n\n    const enableFilterHandler = (filterPattern={}) => {\n        dispatch(filterAction.setTriggerFilter({triggerFilter: true}));\n\n        let date = filterPattern.date || [];\n        if (date.length > 1) {\n            filterPattern.date = [formattingHelper.dateToTimestamp(date[0]), \n                                    formattingHelper.dateToTimestamp(date[1])];\n        }\n\n        dispatch(filterAction.setFilteredData({condition: filterPattern }) );\n    }   \n\n    const disableFilterHandler = () => {\n        dispatch(filterAction.setTriggerFilter({triggerFilter: false}));\n\n        dispatch(filterAction.setFilteredData({}));\n    }\n\n\n    return (\n        <FilterView \n            onEnableFilter={enableFilterHandler}\n            onDisableFilter={disableFilterHandler}/>\n    );\n}\n\n\nexport default Filter;","import { Fragment, useEffect, useState, useMemo } from \"react\";\n// REACT ROUTER\nimport { useHistory } from \"react-router\";\n// REDUX\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { notificationAction } from \"../../stores/notification-slice\";\n// CUSTOM HOOK\nimport useHttp from \"../../hooks/use-http\";\n\n// COMPONENT\nimport CollectionView from \"../../objects/AdminForm/CollectionView/CollectionView\";\nimport Filter from '../Filter/Filter';\n// HELPER\nimport Helper from \"../../helpers/formatingHelper\";\nimport { getMany } from \"../../helpers/apiHelper\";\nimport { sortByField } from \"../../helpers/commonHelper\";\n\nconst Transactions = (props) => {\n    // API ENDPOINT\n    const apiEndpoint = \"transaction\";\n\n    // HOOKS\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const { userId } = useSelector(state => state.auth);\n\n    // STATE\n    const [transactionsList, setTransactionsList] = useState([]);\n\n    const { sendRequest: getAllTransactions, \n            status, \n            error, \n            data: transactions, } = useHttp(getMany.bind(null, apiEndpoint, { user_id: userId }));\n\n    const sortedData = useMemo(() => \n        sortByField({type: 'descending', field: 'created_at', dataSource: transactionsList}), \n    [transactionsList]);\n\n    const filteredData = useSelector(state => state.filter.filteredData);\n\n    useEffect(() => {\n        getAllTransactions(); \n    }, [getAllTransactions]);\n\n    useEffect(() => {\n        if (filteredData.length) {\n            setTransactionsList(filteredData);\n        } else {\n            setTransactionsList(transactions)\n        }   \n    }, [filteredData, transactions]);\n\n\n    useEffect(() => {\n        if (status === 'completed' && error) {\n            dispatch(notificationAction.notify({\n                message: error || \"Có lỗi khi tải dữ liệu!\", \n                type: 'danger',\n            }));\n        } \n    }, [status, error])\n\n    const fields = [\n        // { field: \"id\", label: \"Mã\" },\n        // { field: \"name\", label: \"Tên giao dịch\" },   \n        { field: \"amount\", label: \"Số tiền\", template: (rowObj) => (\n            parseInt(rowObj.amount).toLocaleString('it-IT', {style : 'currency', currency : 'VND'})\n        )},\n\n        { field: \"transaction_type\", label: \"Loại\", style: {textAlign: 'center'}, template: (rowObj) => {\n            let dataView;\n            switch(rowObj.transaction_type.toLowerCase()){\n                case 'thu': \n                    dataView = <i className=\"fa fa-plus-circle\" aria-hidden=\"true\" style={{color: 'green'}}></i>;\n                    break;\n                case 'chi': \n                    dataView = <i className=\"fa fa-minus-circle\" aria-hidden=\"true\" style={{color: 'red'}}></i>; \n                    break;\n            }\n            return dataView;\n        } },\n\n        { field: \"created_at\", label: \"Thời gian\", template: (rowObj) => (\n            Helper.timestampToDate(rowObj.created_at, \"DD/MM/YYYY\")\n        ) },\n    ];\n\n    const goBackHandler = () => history.goBack();\n\n    return (\n        <Fragment>\n            <Filter data={ transactions || [] }/>\n            <CollectionView \n                title={\"Lịch sử giao dịch\"}\n                fields={ fields }\n                navigateDestination={ apiEndpoint } \n                data={ sortedData || [] }\n                onGoBack={goBackHandler}   \n            />\n        </Fragment>    \n    );\n}\n\n\nexport default Transactions;","import React from 'react';\n\nimport classes from './Card.module.css';\n\nconst Card = (props) => {\n    return (\n        <div className={ `${classes.card} ${props.className}` }>\n            { props.children }\n        </div>\n    );\n}\n\n\nexport default Card;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__b7d4V\"};","import { useReducer, useCallback } from \"react\";\n\nconst httpReducer = (state, action) => {\n    if (action.type === 'SUCCESS') {\n        return {\n            status: \"completed\", \n            data: action.responseData, \n            error: null, \n        }\n    } else if (action.type === 'FAILED') {\n        return {\n            status: \"completed\", \n            data: null, \n            error: action.errorMessage, \n        }\n    } \n    return {\n        status: 'pending', \n        error: null, \n        data: null\n    }\n}\n\n\nconst useHttp = (requestFunction) => {\n    const [httpState, dispatchHttpState] = useReducer(httpReducer, {\n        status: \"pending\", \n        data: null, \n        error: null,\n    });\n\n    const sendRequest = useCallback(async (requestData) => {\n        try {\n            const responseData = await requestFunction(requestData); \n            dispatchHttpState({ type: 'SUCCESS', responseData: responseData }); \n        } catch (error) {\n            dispatchHttpState({ type: 'FAILED', errorMessage: error.message });\n        }\n    }, []);\n\n    return {\n        ...httpState, \n        sendRequest\n    }\n\n}\n\nexport default useHttp;","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport { Link } from 'react-router-dom';\n\nimport Button from '../Button';\n\nimport classes from './Buttons.module.css';\n\nconst Buttons = (props) => {\n    /**\n     * props: \n     *  - Each button = {} => props = [{}, {}, {}]\n     *  - {\n     *      name, \n     *      onClick, \n     *      type, \n     *      className, \n     *      isShown\n     *  }\n     */\n    return (\n        <div className={ `${classes.btnGroup} ${props.className}` }>\n            { props.btnList.map(btn => \n                (btn.isShown) && \n                    <Button\n                        key={ btn.name }\n                        type={ btn.type || 'button'}\n                        className={ btn.className }\n                        handleClick={ btn.onClick }>\n                            { btn.name }\n                    </Button>\n            ) }\n        </div>\n\n    );\n}\n\n\nexport default React.memo(Buttons);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Buttons_button__2ziV1\",\"portalBtn\":\"Buttons_portalBtn___Z6CZ\"};","import React, { useRef } from 'react';\n\nimport classes from './SelectBox.module.css';\n\nconst SelectBox = (props) => {\n    const selectRef = useRef(); \n\n    const getSelectValue = () => selectRef.current.value();\n\n    return (\n        <div className={ `${classes.control} ${props.className}` }>\n            <label htmlFor={ props.id }>{ props.label }</label>\n            <select\n                id='type'\n                value={ props.value }\n                ref={ selectRef }\n                onChange={ props.onChange } \n                onBlur={ props.onBlur }\n            >\n                { props.valuesList.map((value, index) => (\n                    <option \n                        key={ value.valueField }\n                        value={ value.valueField }>{ value.textField }</option>\n                )) }\n\n            </select>\n        </div>\n\n    );\n}\n\nexport default SelectBox;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"SelectBox_control__2UFPm\",\"invalid\":\"SelectBox_invalid__1naWs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noti\":\"NoResultNoti_noti__2hvjE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__6RI8A\",\"tableWrapper\":\"Table_tableWrapper__HuTvF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"CollectionView_table__Zvdcw\",\"tableWrapper\":\"CollectionView_tableWrapper__2cyRK\",\"card\":\"CollectionView_card__3bCM6\",\"outcome\":\"CollectionView_outcome__2evDA\",\"income\":\"CollectionView_income__1FHLP\",\"info\":\"CollectionView_info__yD_dI\",\"btn\":\"CollectionView_btn__3XfkC\",\"link\":\"CollectionView_link__X_v23\"};","/**\n * Sorting a list of data by one of its field\n * @param {Object} args => {type, field, dataSource} \n */\nexport const sortByField = (args) => {\n    let {type, field, dataSource} = args; \n\n    if (!type) {\n        // default \n        type = 'ascending';\n    }\n\n    if (dataSource instanceof Array) {\n        if (type === 'descending') {\n            return dataSource.slice().sort((a, b) => b[field] - a[field]);\n        }\n        return dataSource.slice().sort((a, b) => a[field] - b[field]);       // Array is freeze in strict mode\n    }\n    \n    return [];\n}","import React from 'react';\n\n\nimport classes from './NoResultNoti.module.css';\n\nconst NoResultNoti = (props) => {\n    return (\n        <td \n            className={ classes.noti }\n            colSpan={ props.colSpan }>\n                { props.lang === \"en\" ? \n                    \"No record found\" : \"Không có dữ liệu\" }\n        </td>\n\n    );\n}\n\n\nexport default NoResultNoti;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport NoResultNoti from '../../UI/Table/NoResultNoti/NoResultNoti';\n\nimport Helper from '../../helpers/formatingHelper';\n\nimport classes from './Table.module.css';\n\nconst Table = (props) => {\n    /**\n     * tableHead: [\n     *  { field: \"abc\", label: \"ABC\"},\n     *  ...\n     * ]\n     * \n     * props.fields\n     */\n    \n    return ( \n        <div className={ classes.tableWrapper } style={{overflowX: 'auto', overflowY: \"auto\"}}>\n            <table className={ classes.table }>\n                <thead>\n                    <tr>\n                        { props.fields.map( (field, index) => (\n                            <th key={ index.toString() }>{ field.label }</th>   \n                        ))}\n                    </tr> \n                </thead>\n                <tbody>\n                    {!props.data.length ?   \n                        (<tr>\n                            <NoResultNoti \n                                lang=\"vi\"\n                                colSpan={5}/>    \n                        </tr>) :\n                        (props.data.map( (data, index) => (                              \n                            <tr key={ data.id }>                       \n                                {props.fields.map( field => {\n                                    let dataView,\n                                        tdProps = {\n                                            key: Helper.generateId(),\n                                        }; \n                                    \n                                    // CONDITIONAL TEMPLATE\n                                    if (field.hasOwnProperty('template')) {                                          \n                                        dataView = field['template'](data);\n                                    } else {\n                                        dataView = data[field];\n                                    }\n\n                                    // DATA IS A OBJECT OR ARRAY\n                                    // {textField: '', valueField: ''}\n                                    if (field.hasOwnProperty('textField')) {\n                                        dataView = data['textField'];\n                                    }\n\n                                    // WIDTH\n                                    if (field.hasOwnProperty('width')) {\n                                        tdProps.width = field['width'];\n                                    }\n\n                                    if (field.hasOwnProperty('style')) {\n                                        tdProps.style = field['style'];\n                                    }\n                                    \n                                    return (\n                                        <td {...tdProps} >\n                                            <Link \n                                                to={`${props.onNavigate}/${data.id}`}\n                                                style={{textDecoration: 'none', color: 'inherit'}}> \n                                                    { dataView }  \n                                            </Link>     \n                                        </td>\n                                    )                                 \n                                }) }                              \n                            </tr>\n                        ) ) ) }\n                </tbody>\n            </table>\n        </div>\n\n    );\n}\n\nexport default Table;","import React, {useMemo} from 'react';\n// import { useRouteMatch } from 'react-router-dom';\n\n// UI\nimport Card from '../../../UI/Card/Card';\nimport Button from '../../../UI/Button/Button';\nimport Table from '../../../UI/Table/Table';\n\n// import Helper from '../../../../helpers/formatingHelper';\n\n// STYLE\nimport classes from './CollectionView.module.css';\nimport btnClass from '../../../UI/Button/Button.module.css';\n\n\nconst CollectionView = (props) => {\n    // const match = useRouteMatch();\n\n    // const {tableData} = props;\n\n    // const sortTransactionByTime = useMemo((type='ascending') => {\n    //     if (tableData instanceof Array) {\n    //         if (type === 'descending') {\n    //             return tableData.slice().sort((a, b) => a.date - b.date);       // Array is freeze in strict mode\n    //         }\n    //         return tableData.slice().sort((a, b) => b.date - a.date);\n    //     }\n\n    //     return [];\n        \n    // }, [tableData]);\n\n\n    return (\n        <Card className={ `${classes.card} ${props.className}` }>\n            <h1>{ props.title }</h1>\n\n            <Table \n                data={ props.data }\n                fields={ props.fields }\n                onNavigate={ props.navigateDestination }/> \n\n            <Button\n                className={`${btnClass['button-light']} ${classes.btn}`}\n                handleClick={ props.onGoBack }>\n                    Quay lại\n            </Button>\n        </Card>\n\n    );\n}\n\n\nexport default CollectionView;"],"sourceRoot":""}