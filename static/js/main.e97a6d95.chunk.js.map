{"version":3,"sources":["stores/notification-slice.js","config/config-http.js","helpers/httpHelper.js","helpers/apiHelper.js","stores/auth/auth-slice.js","stores/balance/balance-slice.js","UI/LoadingSpinner/LoadingSpinner.js","stores/filter/filter-slice.js","UI/Backdrop/Backdrop.js","UI/Backdrop/Backdrop.module.css","UI/LoadingSpinner/LoadingSpinner.module.css","helpers/formatingHelper.js","stores/user/user-slice.js","stores/index.js","stores/balance/balance-action.js","hooks/use-notification.js","App.js","stores/user/user-action.js","reportWebVitals.js","index.js"],"names":["notificationSlice","createSlice","name","initialState","content","isVisible","type","reducers","notify","state","action","payload","message","delay","toggleVisible","notificationAction","actions","config","url","requestHandler","requestConfig","a","fetch","method","headers","body","JSON","stringify","request","json","data","ok","Error","error_message","post","endpoint","requestData","response","putSingle","id","deleteSingle","getMany","param","URLSearchParams","getSingle","authSlice","isLoggedIn","token","userId","currentUser","login","localStorage","setItem","logout","removeItem","authorized","getItem","authAction","balanceSlice","amount","info","changed","add","sub","setBalanceInfo","parseInt","setBalanceAmount","afterChanged","balanceAction","LoadingSpinner","className","classes","spinner","PortalLoadingSpinner","ReactDOM","createPortal","document","getElementById","filterSlice","filterPattern","filteredData","isTriggerFilter","setFilterPattern","filteredPattern","setFilteredData","condition","date","filter","item","hasOwnProperty","transaction_type","setData","setTriggerFilter","triggerFilter","filterAction","Backdrop","props","backdrop","onClick","onClose","module","exports","Helper","generateId","Math","random","toString","substr","currencyFormating","str","toCurrency","toLocaleString","style","currency","error","getCurrentTimestamp","floor","Date","now","timestampToDate","timestamp","format","moment","dateToTimestamp","unix","dataFormatForGetMany","key","formatedUsers","user","push","dataFormatForGetSingle","userSlice","setUserInfo","userAction","appStore","configureStore","reducer","auth","notification","balance","apiEndpoint","useNotification","dispatch","useDispatch","useState","notiIsVisible","setNotiIsVisible","useSelector","useEffect","timer","setTimeout","clearTimeout","Login","lazy","Signin","Layout","Notification","App","isNotiVisible","console","log","getCurrentUserInfo","user_id","get_latest","fetchBalance","fallback","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode","store"],"mappings":"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","file":"static/js/main.e97a6d95.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst notificationSlice = createSlice({\n    name: 'notification', \n    initialState: {\n        content: null, \n        isVisible: false, \n        type: null, // danger, success, warning \n\n    }, \n    reducers: {\n        notify(state, action) {\n            const payload = action.payload;\n            \n            state.content = {\n                type: payload.type, \n                message: payload.message,\n                delay: payload.delay || 3000,\n            }\n            state.isVisible = true;\n        },\n\n        toggleVisible(state) {\n            state.isVisible = false;\n        }\n    }\n}); \n\nexport const notificationAction = notificationSlice.actions; \n\nexport default notificationSlice;","const config = {\n    // databaseURL: 'https://reacthttps-82741-default-rtdb.asia-southeast1.firebasedatabase.app/',\n    // serverKey: 'AAAALvt6_V4:APA91bGFZY0zDheYtDovgmvJcl4PlEnQFzmkTMC8wBuWeA8YflQu3YGXIU4UKhSdsXibPedyLezl0qhtBkaHoYdRF_BC6Yu8rNFRh36FUD2lTbvRded1C0RdXznjld15s5C5XCYmogey',\n    url: \"http://0.0.0.0:8090/api/v1\",\n    // url: \"https://api.teomoney.website/api/v1\",\n}\n\nexport default config;","import config from \"../config/config-http\";\n\n// REQUEST HANDLER\nexport const requestHandler = async (requestConfig) => {   \n    \n    const request = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : 'GET', \n        headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Methods': 'GET, PUT, POST, DELETE',\n            // 'Origin': '*',\n            // 'Access-Control-Allow-Credentials': 'true'\n            // 'Access-Control-Allow-Headers': 'Content-Type'\n        }, \n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n    });\n\n    const data = await request.json();\n\n    if (!request.ok) {      \n        throw new Error( data.error_message || \"Có lỗi xảy ra. Vui lòng thử lại sau!\");\n    }\n\n    return data;   \n}\n\n\n","import config from '../config/config-http';\n\nimport { requestHandler } from '../helpers/httpHelper';\n\n\nexport const post = async (endpoint, requestData) => {\n    const response = await requestHandler({\n        url: `${config.url}/${endpoint}`, \n        method: 'POST', \n        body: requestData\n    }); \n\n    return response;\n}\n\nexport const putSingle = async (endpoint, requestData) => {\n    const id = requestData.id; \n\n    const response = await requestHandler({\n        url: `${config.url}/${endpoint}/${id}`,\n        method: 'PUT', \n        body: requestData,\n    }); \n\n    return response;\n}\n\nexport const deleteSingle = async (endpoint, id) => {\n    const response = await requestHandler({\n        url: `${config.url}/${endpoint}/${id}`,\n        method: 'DELETE', \n    });\n\n    return response;\n}\n\nexport const getMany = async (endpoint, param) => {\n    const response = await requestHandler({\n        url: `${config.url}/${endpoint}` + (param ? `?${new URLSearchParams(param)}` : ''), \n    }); \n    \n    return response['objects'];\n}\n\nexport const getSingle = async (endpoint, id) => {\n    const response = await requestHandler({\n        url: `${config.url}/${endpoint}/${id}`,\n    });\n\n    return response;\n}\n\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst authSlice = createSlice({\n    name: 'auth', \n    initialState: {\n        isLoggedIn: false, \n        token: null, \n        userId: null, \n        currentUser: null,\n    }, \n    reducers: {\n        login(state, action) {\n            const currentUser = action.payload.currentUser; \n            // state.token = payload.token; \n            state.currentUser = currentUser; \n            state.token = state.userId = currentUser.id\n            state.isLoggedIn = true;\n            // state.userId = currentUser.id; \n\n            localStorage.setItem(\"token\", state.token); \n            localStorage.setItem(\"userId\", state.userId); \n        },\n        logout(state, action) {\n            state.token = null; \n            state.currentUser = null; \n            state.isLoggedIn = false; \n            state.userId = null;\n\n            localStorage.removeItem(\"token\");\n            localStorage.removeItem(\"userId\");\n        }, \n        authorized(state, action) {\n            state.token = state.userId = localStorage.getItem(\"token\");\n            // Need to compare that token to the token save on redis\n            // Move this to auth-action.js\n            state.isLoggedIn = state.token ? true : false;\n        }\n    }\n}); \n\nexport const authAction = authSlice.actions; \n\nexport default authSlice;","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst balanceSlice = createSlice({\n    name: 'balance', \n    initialState: {\n        amount: 0,         // the latest balance\n        info: null,\n        changed: false,\n    }, \n    reducers: {\n        add(state, action) {\n            state.amount += action.payload.amount;\n            state.changed = true; \n        }, \n        sub(state, action) {\n            state.amount -= action.payload.amount; \n            state.changed = true;\n        }, \n        setBalanceInfo(state, action) {\n            state.info = action.payload; \n            state.amount = parseInt(state.info.amount); \n        },\n        setBalanceAmount(state, action) { \n            state.amount = action.payload;\n        },\n        afterChanged(state, action) {\n            state.changed = false; \n        }\n    }\n});\n\nexport default balanceSlice; \n\nexport const balanceAction = balanceSlice.actions; ","import { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport Backdrop from '../Backdrop/Backdrop';\nimport classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nconst PortalLoadingSpinner = () => {\n  return (\n    <Fragment>\n      {ReactDOM.createPortal(<LoadingSpinner />, \n                                document.getElementById(\"backdrop\"))}\n      { ReactDOM.createPortal(<Backdrop />, \n                                document.getElementById('backdrop'))}\n        \n    </Fragment>\n    \n  );\n}\nexport default PortalLoadingSpinner;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport formattingHelper from '../../helpers/formatingHelper';\n\n\nconst initialFilter = {\n    filterPattern: {}, filteredData: [], isTriggerFilter: false, data: [], \n};\n\n\nconst filterSlice = createSlice({\n    name: 'filter', \n    initialState: initialFilter, \n    reducers: {\n        setFilterPattern(state, action) {\n            state.filterPattern = action.payload.filteredPattern;\n        }, \n        setFilteredData(state, action) {  \n            if (state.isTriggerFilter) {\n                const { type, date } = action.payload.condition;\n                const condition = action.payload.condition;\n                // Need to move to Filter component\n                const filterFunc = (item) => {\n                    if (condition.hasOwnProperty('type') && condition.hasOwnProperty('date')) {\n                        return (item.transaction_type === type) && ((item.date >= date[0]) && (item.date <= date[1]))\n                    }\n\n                    else if (condition.hasOwnProperty('type')) {\n                        return (item.transaction_type === type)\n                    }\n\n                    else if (condition.hasOwnProperty('date')) {\n                        return (item.date >= date[0]) && (item.date <= date[1]);\n                    }\n                };\n  \n                state.filteredData = state.data.filter(filterFunc);\n            } else {\n                state.filteredData = state.data;\n            }\n        },\n        setData(state, action) {\n            state.data = action.payload;\n        },\n        setTriggerFilter(state, action) {\n            state.isTriggerFilter = action.payload.triggerFilter;\n        }\n    }\n});\n\nexport const filterAction = filterSlice.actions;\n\nexport default filterSlice;\n\n\n\n\n\n","\nimport classes from './Backdrop.module.css';\n\nconst Backdrop = (props) => {\n    return (\n        <div \n            className={ classes.backdrop }\n            onClick={ props.onClose} />\n    );\n}\n\nexport default Backdrop;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Backdrop_backdrop__3sd-f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__nnU83\"};","import moment from 'moment';\n\nclass Helper {\n\n    constructor(){\n        return; \n    }\n\n    static generateId = () => {\n        return Math.random().toString(36).substr(2, 5);\n    }\n\n    static currencyFormating = (str) => {\n        let toCurrency ;\n        try {\n          toCurrency = parseInt(str).toLocaleString('it-IT', {style : 'currency', currency : 'VND'});\n        } catch (error) {\n            return null;\n        }\n        return toCurrency;\n    }\n\n    /**\n     * TIME HELPER\n     */\n\n    static getCurrentTimestamp = () => {\n        return Math.floor(Date.now() / 1000);\n    }\n\n\n    static timestampToDate = (timestamp, format) => {\n        let date;\n        try {\n            date = moment(timestamp).format(format);\n        } catch (error){\n            return null;\n        }\n        return date;\n    }\n\n    static dateToTimestamp = (date) => {\n        let timestamp;\n        try {\n            timestamp = moment(date).unix();\n        } catch (error) {\n            return null;\n        }\n\n        return timestamp;\n    }\n\n    /**\n     * DATA FORMATING\n     */\n\n     static dataFormatForGetMany = async (data) => {\n        const formatedUsers = [];\n    \n        for (let key in data) {\n            const user = {\n                id: key,\n                ...data[key]\n            }\n    \n            formatedUsers.push(user);\n        }\n    \n        return formatedUsers\n    }\n    \n    static dataFormatForGetSingle = async (id, data) => {\n        return {\n            id: id, \n            ...data\n        }\n    }\n    \n}\n\n\nexport default Helper;","import { createSlice } from \"@reduxjs/toolkit\"; \n\nconst userSlice = createSlice({\n    name: \"user\", \n    initialState: {\n        info: null, \n    }, \n    reducers: {\n        setUserInfo(state, action) {\n            state.info = action.payload; \n        }\n    }\n});\n\nexport default userSlice;\n\nexport const userAction = userSlice.actions;","import { configureStore } from \"@reduxjs/toolkit\";\n\n// SLICE\nimport authSlice from \"./auth/auth-slice\";\nimport balanceSlice from \"./balance/balance-slice\";\nimport notificationSlice from \"./notification-slice\";\nimport userSlice from \"./user/user-slice\";\nimport filterSlice from \"./filter/filter-slice\";\n\n\nconst appStore = configureStore({\n    reducer: {\n        auth: authSlice.reducer, \n        user: userSlice.reducer,\n        notification: notificationSlice.reducer,\n        balance: balanceSlice.reducer,\n        filter: filterSlice.reducer\n    }\n}); \n\nexport default appStore;","// REDUX\nimport { balanceAction } from './balance-slice';\nimport { notificationAction } from '../notification-slice';\n// HELPER\nimport { getMany, post } from '../../helpers/apiHelper';\n\n\nconst apiEndpoint = 'balance';\n\nexport const fetchBalance = (userId) => {\n    return async (dispatch) => {\n        try {\n            const response = await getMany(apiEndpoint, {user_id: userId, get_latest: true}); \n\n            dispatch(balanceAction.setBalanceInfo(response[0]));\n\n        } catch (error) {\n            dispatch(notificationAction.notify({\n                message: error.message || \"Không thể lấy thông tin số dư\", \n                type: 'danger'\n            }));\n        }\n    }\n}\n\nexport const createBalance = (data) => {\n    return async (dispatch) => {\n        try {\n            await post(apiEndpoint, data); \n            dispatch(balanceAction.afterChanged());\n        } catch (error) {\n            dispatch(notificationAction.notify({\n                message: error.message || \"Không thể cập nhật số dư\", \n                type: 'danger'\n            }));\n        }\n    }\n}","import { useState, useEffect } from \"react\";\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport { notificationAction } from \"../stores/notification-slice\";\n\nconst useNotification = (props) => {\n    const dispatch = useDispatch();\n\n    const [notiIsVisible, setNotiIsVisible] = useState(false);\n    \n    const {content, isVisible} = useSelector(state => state.notification); \n\n    useEffect(() => {\n        if (isVisible) {\n            setNotiIsVisible(true);\n\n            const timer = setTimeout(() => {\n                dispatch(notificationAction.toggleVisible()); \n                setNotiIsVisible(false);\n            }, content.delay);\n\n            return () => {\n                clearTimeout(timer);\n            }\n        }\n    }, [isVisible, content])\n    \n\n    return notiIsVisible;\n}\n\n\nexport default useNotification;","import React, { lazy, Suspense, Fragment, useEffect } from 'react';\nimport { Route, Switch } from 'react-router';\n// REDUX\nimport { useSelector, useDispatch } from 'react-redux';\nimport { authAction } from './stores/auth/auth-slice';\nimport { fetchBalance, createBalance } from './stores/balance/balance-action';\nimport { getCurrentUserInfo } from './stores/user/user-action';\n// CUSTOM HOOK\nimport useNotification from './hooks/use-notification';\n\nimport './App.css';\n// UI\nimport LoadingSpinner from './UI/LoadingSpinner/LoadingSpinner'; \n// const LoadingSpinner = lazy(() => import('./UI/LoadingSpinner/LoadingSpinner'));\n// COMPONENT\nconst Login = lazy(() => import('./pages/Login/Login'));\nconst Signin = lazy(() => import('./pages/Signin/Signin'));\nconst Layout = lazy(() => import('./base/layout/layout'));\nconst Notification = lazy(() => import('./base/notification/Notification'));\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const isNotiVisible = useNotification();\n  \n  const auth = useSelector(state => state.auth); \n\n  const { info } = useSelector(state => state.user);\n  const {isLoggedIn, token, userId} = auth; \n  \n  // AUTHORIZATION\n  useEffect(() => {\n    dispatch(authAction.authorized());\n  }, [dispatch, authAction.authorized]);\n\n  // USER INFO\n  useEffect(() => {\n    console.log(\"Get current user\");\n    dispatch(getCurrentUserInfo(token));\n  }, [dispatch, token]);\n\n  // BALANCE\n  const balance = useSelector(state => state.balance); \n  useEffect(() => {\n    if (!isLoggedIn) return;\n    // CAN I MOVE IT TO SOMEWHERE ELSE (EX: BALANCE FOLDER)\n    if (!balance.changed) {\n      // FETCH BALANCE\n      dispatch(fetchBalance(userId)); \n    } else {\n      // CREATE NEW BALANCE\n      const payload = {\n        amount: balance.amount, \n        user_id: auth.userId,\n      }\n      dispatch(createBalance(payload));\n    }\n  }, [isLoggedIn, balance.changed]);\n\n\n  return (\n    <Fragment>\n      <Suspense fallback={<LoadingSpinner />}>\n        {isNotiVisible && <Notification />}\n        <Switch>\n          { !isLoggedIn && <Route path='/signin' render={ props => <Signin />} />}\n          \n          { isLoggedIn && <Layout /> }\n\n          { !isLoggedIn && <Route path='*' render={ props => <Login />} />}\n        </Switch>  \n      </Suspense>   \n    </Fragment>\n  );\n}\n\nexport default App;\n","// REDUX\nimport { userAction } from './user-slice';\nimport { notificationAction } from '../notification-slice';\n// HELPER\nimport { getSingle } from '../../helpers/apiHelper';\n\nconst apiEndpoint = 'user';\n\nexport const getCurrentUserInfo = (token) => {\n    return async (dispatch) => {\n        try {\n            if (!token) return;\n            \n            console.log('token', token);\n\n            const response = await getSingle(apiEndpoint, token); \n\n            console.log('userInfo From App.js', response);\n\n            dispatch(userAction.setUserInfo(response));\n        } catch (error) {\n            dispatch(notificationAction.notify({\n                message: error.message, \n                type: 'danger',\n            }));\n        }\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './stores/index';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>  \n    </BrowserRouter>    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}