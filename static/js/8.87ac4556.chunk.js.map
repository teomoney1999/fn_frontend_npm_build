{"version":3,"sources":["pages/Balances/Balances.js","UI/Card/Card.js","UI/Card/Card.module.css","hooks/use-http.js","objects/Balances/DashboardView/Balance.js","objects/Balances/DashboardView/Balance.module.css","UI/Table/NoResultNoti/NoResultNoti.module.css","UI/Table/Table.module.css","objects/AdminForm/CollectionView/CollectionView.module.css","helpers/commonHelper.js","UI/Table/NoResultNoti/NoResultNoti.js","UI/Table/Table.js","objects/AdminForm/CollectionView/CollectionView.js"],"names":["Balances","props","apiEndpoint","history","useHistory","dispatch","useDispatch","userId","useSelector","state","auth","useState","balancesList","setBalancesList","useHttp","getMany","bind","user_id","getAllBalances","sendRequest","status","error","balances","data","sortedData","useMemo","sortByField","type","field","dataSource","useEffect","length","notificationAction","notify","message","fields","label","template","rowObj","parseInt","amount","toLocaleString","style","currency","Helper","timestampToDate","created_at","title","navigateDestination","onGoBack","goBack","Card","className","classes","card","children","module","exports","httpReducer","action","responseData","errorMessage","requestFunction","useReducer","httpState","dispatchHttpState","useCallback","requestData","a","Balance","balance","currencyFormating","args","Array","slice","sort","b","NoResultNoti","noti","colSpan","lang","Table","tableWrapper","overflowX","overflowY","table","map","index","toString","dataView","tdProps","key","generateId","hasOwnProperty","width","to","onNavigate","id","textDecoration","color","CollectionView","Button","btnClass","btn","handleClick"],"mappings":"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","file":"static/js/8.87ac4556.chunk.js","sourcesContent":["import { Fragment, useEffect, useState, useMemo } from \"react\";\n// REACT ROUTER\nimport { useHistory } from \"react-router\";\n// REDUX\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { notificationAction } from \"../../stores/notification-slice\";\n// CUSTOM HOOK\nimport useHttp from \"../../hooks/use-http\";\n// COMPONENT\nimport CollectionView from \"../../objects/AdminForm/CollectionView/CollectionView\";\nimport BalanceView from '../../objects/Balances/DashboardView/Balance';\n// HELPER\nimport Helper from \"../../helpers/formatingHelper\";\nimport { getMany } from \"../../helpers/apiHelper\";\nimport { sortByField } from \"../../helpers/commonHelper\";\n\nconst Balances = (props) => {\n    // API ENDPOINT\n    const apiEndpoint = \"balance\";\n\n    // HOOKS\n    const history = useHistory();\n    const dispatch = useDispatch();\n    \n    const { userId } = useSelector(state => state.auth);\n\n    // STATE\n    const [balancesList, setBalancesList] = useState([]);\n\n    const { sendRequest: getAllBalances, \n            status, \n            error, \n            data: balances, } = useHttp(getMany.bind(null, apiEndpoint, { user_id: userId }));\n\n    const sortedData = useMemo(() => \n        sortByField({type: 'descending', field: 'created_at', dataSource: balances}), \n    [balances, sortByField]);\n\n    useEffect(() => {\n        getAllBalances(); \n    }, [getAllBalances]);\n\n    useEffect(() => {\n        if (!sortedData.length) {\n            setBalancesList(balances);\n        } else {\n            setBalancesList(sortedData); \n        }     \n    }, [balances]);\n\n    useEffect(() => {\n        if (status === 'completed' && error) {\n            dispatch(notificationAction.notify({\n                message: error || \"Có lỗi khi tải dữ liệu!\", \n                type: 'danger',\n            }));\n        } \n    }, [status, error])\n\n    const fields = [\n        // { field: \"id\", label: \"Mã\" },\n        // { field: \"name\", label: \"Tên giao dịch\" },   \n        { field: \"amount\", label: \"Số tiền\", template: (rowObj) => (\n            parseInt(rowObj.amount).toLocaleString('it-IT', {style : 'currency', currency : 'VND'})\n        )},\n\n        { field: \"created_at\", label: \"Thời gian\", template: (rowObj) => (\n            Helper.timestampToDate(rowObj.created_at, \"DD/MM/YYYY\")\n        ) },\n    ];\n\n    const goBackHandler = () => history.goBack();\n\n    return (\n        <Fragment>\n            <BalanceView />\n            <CollectionView \n                title={\"Danh sách số dư\"}\n                fields={ fields }\n                navigateDestination={ apiEndpoint } \n                data={ balancesList || [] }\n                onGoBack={goBackHandler}   \n            />\n        </Fragment>\n        \n    );\n}\n\n\nexport default Balances;","import React from 'react';\n\nimport classes from './Card.module.css';\n\nconst Card = (props) => {\n    return (\n        <div className={ `${classes.card} ${props.className}` }>\n            { props.children }\n        </div>\n    );\n}\n\n\nexport default Card;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__b7d4V\"};","import { useReducer, useCallback } from \"react\";\n\nconst httpReducer = (state, action) => {\n    if (action.type === 'SUCCESS') {\n        return {\n            status: \"completed\", \n            data: action.responseData, \n            error: null, \n        }\n    } else if (action.type === 'FAILED') {\n        return {\n            status: \"completed\", \n            data: null, \n            error: action.errorMessage, \n        }\n    } \n    return {\n        status: 'pending', \n        error: null, \n        data: null\n    }\n}\n\n\nconst useHttp = (requestFunction) => {\n    const [httpState, dispatchHttpState] = useReducer(httpReducer, {\n        status: \"pending\", \n        data: null, \n        error: null,\n    });\n\n    const sendRequest = useCallback(async (requestData) => {\n        try {\n            const responseData = await requestFunction(requestData); \n            dispatchHttpState({ type: 'SUCCESS', responseData: responseData }); \n        } catch (error) {\n            dispatchHttpState({ type: 'FAILED', errorMessage: error.message });\n        }\n    }, []);\n\n    return {\n        ...httpState, \n        sendRequest\n    }\n\n}\n\nexport default useHttp;","import React from 'react';\nimport {useSelector} from 'react-redux';\n\nimport Card from '../../../UI/Card/Card';\nimport Helper from '../../../helpers/formatingHelper';\nimport classes from './Balance.module.css';\n\n\nconst Balance = (props) => {\n    const balance = useSelector(state => state.balance.amount);\n\n    return (\n        <Card className={ `${classes.card} ${props.className}`}>\n            <div>\n                <h2>Số dư</h2>\n                <div className={ classes.balance }>{ Helper.currencyFormating(props.balance || balance) }</div>\n            </div>        \n        </Card>\n\n    );\n}\n\n\nexport default Balance;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Balance_card__3FDCu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noti\":\"NoResultNoti_noti__2hvjE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__6RI8A\",\"tableWrapper\":\"Table_tableWrapper__HuTvF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"CollectionView_table__Zvdcw\",\"tableWrapper\":\"CollectionView_tableWrapper__2cyRK\",\"card\":\"CollectionView_card__3bCM6\",\"outcome\":\"CollectionView_outcome__2evDA\",\"income\":\"CollectionView_income__1FHLP\",\"info\":\"CollectionView_info__yD_dI\",\"btn\":\"CollectionView_btn__3XfkC\",\"link\":\"CollectionView_link__X_v23\"};","/**\n * Sorting a list of data by one of its field\n * @param {Object} args => {type, field, dataSource} \n */\nexport const sortByField = (args) => {\n    let {type, field, dataSource} = args; \n\n    if (!type) {\n        // default \n        type = 'ascending';\n    }\n\n    if (dataSource instanceof Array) {\n        if (type === 'descending') {\n            return dataSource.slice().sort((a, b) => b[field] - a[field]);\n        }\n        return dataSource.slice().sort((a, b) => a[field] - b[field]);       // Array is freeze in strict mode\n    }\n    \n    return [];\n}","import React from 'react';\n\n\nimport classes from './NoResultNoti.module.css';\n\nconst NoResultNoti = (props) => {\n    return (\n        <td \n            className={ classes.noti }\n            colSpan={ props.colSpan }>\n                { props.lang === \"en\" ? \n                    \"No record found\" : \"Không có dữ liệu\" }\n        </td>\n\n    );\n}\n\n\nexport default NoResultNoti;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport NoResultNoti from '../../UI/Table/NoResultNoti/NoResultNoti';\n\nimport Helper from '../../helpers/formatingHelper';\n\nimport classes from './Table.module.css';\n\nconst Table = (props) => {\n    /**\n     * tableHead: [\n     *  { field: \"abc\", label: \"ABC\"},\n     *  ...\n     * ]\n     * \n     * props.fields\n     */\n    \n    return ( \n        <div className={ classes.tableWrapper } style={{overflowX: 'auto', overflowY: \"auto\"}}>\n            <table className={ classes.table }>\n                <thead>\n                    <tr>\n                        { props.fields.map( (field, index) => (\n                            <th key={ index.toString() }>{ field.label }</th>   \n                        ))}\n                    </tr> \n                </thead>\n                <tbody>\n                    {!props.data.length ?   \n                        (<tr>\n                            <NoResultNoti \n                                lang=\"vi\"\n                                colSpan={5}/>    \n                        </tr>) :\n                        (props.data.map( (data, index) => (                              \n                            <tr key={ data.id }>                       \n                                {props.fields.map( field => {\n                                    let dataView,\n                                        tdProps = {\n                                            key: Helper.generateId(),\n                                        }; \n                                    \n                                    // CONDITIONAL TEMPLATE\n                                    if (field.hasOwnProperty('template')) {                                          \n                                        dataView = field['template'](data);\n                                    } else {\n                                        dataView = data[field];\n                                    }\n\n                                    // DATA IS A OBJECT OR ARRAY\n                                    // {textField: '', valueField: ''}\n                                    if (field.hasOwnProperty('textField')) {\n                                        dataView = data['textField'];\n                                    }\n\n                                    // WIDTH\n                                    if (field.hasOwnProperty('width')) {\n                                        tdProps.width = field['width'];\n                                    }\n\n                                    if (field.hasOwnProperty('style')) {\n                                        tdProps.style = field['style'];\n                                    }\n                                    \n                                    return (\n                                        <td {...tdProps} >\n                                            <Link \n                                                to={`${props.onNavigate}/${data.id}`}\n                                                style={{textDecoration: 'none', color: 'inherit'}}> \n                                                    { dataView }  \n                                            </Link>     \n                                        </td>\n                                    )                                 \n                                }) }                              \n                            </tr>\n                        ) ) ) }\n                </tbody>\n            </table>\n        </div>\n\n    );\n}\n\nexport default Table;","import React, {useMemo} from 'react';\n// import { useRouteMatch } from 'react-router-dom';\n\n// UI\nimport Card from '../../../UI/Card/Card';\nimport Button from '../../../UI/Button/Button';\nimport Table from '../../../UI/Table/Table';\n\n// import Helper from '../../../../helpers/formatingHelper';\n\n// STYLE\nimport classes from './CollectionView.module.css';\nimport btnClass from '../../../UI/Button/Button.module.css';\n\n\nconst CollectionView = (props) => {\n    // const match = useRouteMatch();\n\n    // const {tableData} = props;\n\n    // const sortTransactionByTime = useMemo((type='ascending') => {\n    //     if (tableData instanceof Array) {\n    //         if (type === 'descending') {\n    //             return tableData.slice().sort((a, b) => a.date - b.date);       // Array is freeze in strict mode\n    //         }\n    //         return tableData.slice().sort((a, b) => b.date - a.date);\n    //     }\n\n    //     return [];\n        \n    // }, [tableData]);\n\n\n    return (\n        <Card className={ `${classes.card} ${props.className}` }>\n            <h1>{ props.title }</h1>\n\n            <Table \n                data={ props.data }\n                fields={ props.fields }\n                onNavigate={ props.navigateDestination }/> \n\n            <Button\n                className={`${btnClass['button-light']} ${classes.btn}`}\n                handleClick={ props.onGoBack }>\n                    Quay lại\n            </Button>\n        </Card>\n\n    );\n}\n\n\nexport default CollectionView;"],"sourceRoot":""}