{"version":3,"sources":["objects/Balances/ModelView.js","pages/Balances/Balance.js","UI/Card/Card.js","UI/Card/Card.module.css","hooks/use-http.js","hooks/use-input.js","UI/Input/Input.js","UI/Input/Input.module.css","helpers/validateHelper.js","UI/Button/ButtonGroup/Buttons.js","UI/Button/ButtonGroup/Buttons.module.css","objects/AdminForm/ModelView/ModelView.module.css"],"names":["ModelView","props","useState","balanceId","setBalanceId","date","setDate","isDelete","setIsDelete","useInput","validateHelper","amountValidate","amount","enteredValue","amountIsValid","valueIsValid","amountHasError","hasError","amountChangeHandler","valueChangeHandler","amountInputBlurHanlder","inputBlurHandler","amountFetchHandler","fetchValueHandler","formIsValid","data","console","log","useEffect","idProp","id","amountProp","dateProp","formatingHelper","timestampToDate","getCurrentTimestamp","error","status","notify","message","type","Card","className","classes","card","onSubmit","event","preventDefault","onDelete","input","Input","label","value","disabled","isValid","onChange","onBlur","errorMessage","btnList","btnClasses","onClick","onGoBack","name","isShown","action","React","memo","Balance","apiEndpoint","params","useParams","history","useHistory","dispatch","useDispatch","balance","setBalance","useHttp","getSingle","bind","_read","sendRequest","deleteSingle","_delete","deleteError","deleteStatus","deleteHandler","a","push","notificationAction","goBack","children","module","exports","httpReducer","state","responseData","requestFunction","useReducer","httpState","dispatchHttpState","useCallback","requestData","validateInputFunc","setEnteredValue","isTouched","setIsTouched","length","trim","target","reset","forwardRef","ref","inputRef","useRef","activate","current","focus","useImperativeHandle","control","invalid","htmlFor","placeholder","usernameValidate","username","passwordValidate","password","fullnameValidate","fullname","emailValidate","email","includes","phoneValidate","phone","phoneTrimmed","filter","header","nameValidate","parseInt","Buttons","btnGroup","map","btn","handleClick"],"mappings":"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","file":"static/js/9.8ac309e9.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n// REDUX\n// import { useSelector } from 'react-redux';\n// UI\nimport Card from '../../UI/Card/Card';\n// import Button from '../../UI/Button/Button';\nimport Input from '../../UI/Input/Input';\n// import SelectBox from '../../UI/SelectBox/SelectBox';\n// import LoadingSpinner from '../../../../UI/LoadingSpinner/LoadingSpinner';\nimport ButtonGroup from '../../UI/Button/ButtonGroup/Buttons';\n\n\n// CÚSTOM HOOK\nimport useInput from '../../hooks/use-input';\n\n// HELPER\nimport validateHelper from '../../helpers/validateHelper';\nimport formatingHelper from '../../helpers/formatingHelper'; \n\n// STYLE\nimport classes from '../AdminForm/ModelView/ModelView.module.css';\nimport btnClasses from '../../UI/Button/Button.module.css';\n\n\n\nconst ModelView = (props) => {\n    // const { userId } = useSelector(state => state.auth); \n\n    const [balanceId, setBalanceId] = useState('');\n    const [date, setDate] = useState('');\n    const [isDelete, setIsDelete] = useState(false);\n\n\n    const { enteredValue: amount, \n            valueIsValid: amountIsValid,\n            hasError: amountHasError, \n            valueChangeHandler: amountChangeHandler, \n            inputBlurHandler: amountInputBlurHanlder,\n            fetchValueHandler: amountFetchHandler\n            } = useInput(validateHelper.amountValidate);\n    \n    \n    let formIsValid = false;\n    if (amountIsValid) {\n        formIsValid = true; \n    }\n\n    // FETCH DATA\n    const { data } = props;\n    console.log('data', data);\n    useEffect(() => {   \n        const { id: idProp, \n            amount: amountProp,\n            date: dateProp,\n            } = data;\n\n        setBalanceId(idProp);\n        amountFetchHandler(amountProp); \n        setDate(formatingHelper.timestampToDate(dateProp, \"DD/MM/YYYY\") || formatingHelper.getCurrentTimestamp());\n    }, [data]);\n\n    // NOTIFY\n    const { error, status } = props;\n    useEffect(() => {\n        if (status === 'completed' && error) {\n            props.notify({message: error, type: 'danger'}); \n        } else if (status === 'completed' && !error) {\n            props.notify({message: \"Lưu thông tin thành công!\", type: \"success\"});\n        } \n    }, [error, status]);\n\n \n    const submitHandler = (event) => {\n        event.preventDefault(); \n            \n            if (formIsValid){\n                if (balanceId) {\n                    if (isDelete) {\n                        props.onDelete(balanceId);\n                        setIsDelete(false);\n                }\n            } else {\n                props.notify({message: \"Vui lòng điền đầy đủ thông tin!\", type: 'danger'});\n            }\n        };\n    }\n\n    return (\n        <Card className={ `${classes.card} ${props.className}` }>\n            <h2>Thông tin số dư</h2>\n            <form onSubmit={ submitHandler }>\n                <div className={`${classes.input} `} >\n                    <Input \n                        id='name' \n                        type='text'\n                        label={ 'Ngày tạo' }\n                        value={ date }\n                        className={ classes['card-input'] }\n                        disabled={ true }\n                        />\n\n                    <Input \n                        id='amount' \n                        type='text'\n                        label={ 'Số tiền' }\n                        isValid={ amountIsValid }\n                        hasError={ amountHasError }\n                        value={ amount }\n                        onChange={ amountChangeHandler }\n                        onBlur={ amountInputBlurHanlder }\n                        className={ classes['card-input'] }\n                        errorMessage={ \"Vui lòng nhập lại số tiền (Lớn hơn 1000 VND)\" } \n                        disabled={ true }\n                        />\n                </div>\n\n\n                <ButtonGroup \n                    btnList={ [\n                        {\n                            className: btnClasses['button-light'],\n                            onClick: props.onGoBack, \n                            name: 'Quay lại', \n                            isShown: true,\n                        }, \n                        // {\n                        //     className: btnClasses['button-success'], \n                        //     type: 'submit', \n                        //     name: 'Lưu thông tin', \n                        //     isShown: true\n                        // },\n                        {\n                            className: btnClasses['button-danger'], \n                            name: 'Xoá thông tin', \n                            type: 'submit',\n                            onClick: () => setIsDelete(true),\n                            isShown: balanceId ? true : false,\n                        }\n                    ] }\n                    className={ classes.action }\n                />\n                \n            </form>\n        </Card>\n    \n    );\n}\n\n\n\n// export default TransactionItemView;\nexport default React.memo(ModelView);","import { useEffect, useState } from 'react';\n// REACT ROUTER\nimport { useHistory, useParams } from 'react-router';\n// REDUX\nimport { useDispatch } from 'react-redux';\nimport { notificationAction } from '../../stores/notification-slice';\n// import { balanceAction } from '../../stores/balance/balance-slice';\n// CUSTOM HOOK\nimport useHttp from '../../hooks/use-http'; \nimport { getSingle, deleteSingle } from '../../helpers/apiHelper';\n// COMPONENT\nimport BalanceView from '../../objects/Balances/ModelView';\n\nconst Balance = (props) => {\n    const apiEndpoint = 'balance';\n    // HOOKS\n    const params = useParams();\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const { balanceId } = params; \n    /**\n     * METHOD: GET SINGLE\n     */\n    const [balance, setBalance] = useState({}); \n\n    const { sendRequest: _read, \n            error, status, \n            data } = useHttp(getSingle.bind(null, apiEndpoint));\n     \n    useEffect(() => {\n        if (!balanceId) {\n            setBalance({}); \n            return; \n        } \n        if (!data) {\n            _read(balanceId); \n        } else {\n            setBalance(data); \n        }   \n    }, [balanceId, _read, data]);\n\n    /**\n     * METHOD: DELETE \n     */\n     const { sendRequest: _delete, error: deleteError, status: deleteStatus\n        // error, status, data: transaction \n    } = useHttp(deleteSingle.bind(null, apiEndpoint));\n\n    const deleteHandler = async (id) => {\n        const response = await _delete(id); \n\n        history.push('/balances');\n    }\n\n    const notify = ({id, message, type}) => {\n        dispatch(notificationAction.notify({\n            message: message, \n            type: type\n        }));\n    }\n    \n     const goBackHandler = () => {\n        history.goBack(); \n    }\n    return (\n        <BalanceView \n            data={ balance }\n            error={ deleteError }\n            status={deleteStatus}\n            notify={ notify }\n            onDelete={ deleteHandler }\n            onGoBack={ goBackHandler }/>\n    );\n}\n\n\nexport default Balance;","import React from 'react';\n\nimport classes from './Card.module.css';\n\nconst Card = (props) => {\n    return (\n        <div className={ `${classes.card} ${props.className}` }>\n            { props.children }\n        </div>\n    );\n}\n\n\nexport default Card;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__b7d4V\"};","import { useReducer, useCallback } from \"react\";\n\nconst httpReducer = (state, action) => {\n    if (action.type === 'SUCCESS') {\n        return {\n            status: \"completed\", \n            data: action.responseData, \n            error: null, \n        }\n    } else if (action.type === 'FAILED') {\n        return {\n            status: \"completed\", \n            data: null, \n            error: action.errorMessage, \n        }\n    } \n    return {\n        status: 'pending', \n        error: null, \n        data: null\n    }\n}\n\n\nconst useHttp = (requestFunction) => {\n    const [httpState, dispatchHttpState] = useReducer(httpReducer, {\n        status: \"pending\", \n        data: null, \n        error: null,\n    });\n\n    const sendRequest = useCallback(async (requestData) => {\n        try {\n            const responseData = await requestFunction(requestData); \n            dispatchHttpState({ type: 'SUCCESS', responseData: responseData }); \n        } catch (error) {\n            dispatchHttpState({ type: 'FAILED', errorMessage: error.message });\n        }\n    }, []);\n\n    return {\n        ...httpState, \n        sendRequest\n    }\n\n}\n\nexport default useHttp;","import { useState } from 'react';\n\n\nconst useInput = (validateInputFunc) => {\n    const [enteredValue, setEnteredValue] = useState(''); \n    const [isTouched, setIsTouched] = useState(false); \n\n    const valueIsValid = validateInputFunc(enteredValue.length ? enteredValue.trim() : enteredValue);\n    const hasError =  (!valueIsValid && isTouched);\n\n    const valueChangeHandler = (event) => {\n        setEnteredValue(event.target.value); \n    }\n\n    const inputBlurHandler = (event) => {\n        setIsTouched(true); \n    }\n\n    const fetchValueHandler = (value) => {\n        setEnteredValue(value || '');\n    }\n\n    const reset = () => {\n        setEnteredValue(''); \n        setIsTouched(false);\n    }\n\n    return {\n        enteredValue, \n        valueIsValid,\n        hasError, \n        valueChangeHandler, \n        inputBlurHandler,\n        fetchValueHandler,\n        reset\n    }\n}\n\n\nexport default useInput;\n\n","import React, { useRef, useImperativeHandle } from 'react';\n\nimport classes from './Input.module.css';\n\nconst Input = React.forwardRef((props, ref) => {\n    const inputRef = useRef(); \n    \n    // const getInputValue = () => inputRef.current.value; \n\n    const activate = () => inputRef.current.focus(); \n\n    useImperativeHandle(ref, () => {\n        return {\n            focus: activate,\n        }\n    })\n    return (\n        <div className={ `${classes.control} ${ props.className } ${\n            props.hasError ? classes.invalid : ''\n        }` }>\n            <label htmlFor={ props.id }>{ props.label }</label>\n            <input \n                id={ props.id }    \n                type={ props.type }\n                value={ props.value }\n                placeholder={ props.placeholder }\n                onChange={ props.onChange }\n                onBlur={ props.onBlur }\n                ref={ inputRef }\n                disabled={ props.disabled ? true : false}\n            />\n            { props.hasError && <p className={ classes.error }>{ props.errorMessage }</p>}       \n        </div>\n        \n    );\n});\n\n\nexport default Input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"Input_control__3fhd9\",\"invalid\":\"Input_invalid__376Oq\",\"error\":\"Input_error__1CLDt\"};","\n\nclass validateHelper {\n    constructor() {\n        return; \n    }\n\n    /** USER */\n    static usernameValidate = (username) => {\n        if (username) {\n            const value = username.trim();\n            return value.length > 5;\n        }\n        return false;\n    }\n    \n    static passwordValidate = (password) => {\n        if (password) {\n            return password.trim().length > 5;\n        }\n        return false;\n    }\n    \n    static fullnameValidate = (fullname) => {\n        if (fullname) {\n            return fullname.trim().length > 8;\n        }\n        return false;\n    }\n\n    static emailValidate = (email) => {\n        if (email) {\n            return email.trim().length > 10 && email.includes('@');\n        }\n        return false;\n    }\n    \n    static phoneValidate = (phone) => {\n        if (phone) {\n            const phoneTrimmed = phone.trim();\n            const phoneHeader = ['032', '033', '034', '035', '036', '037', '038', '039', '092']; \n            const phoneIncludeValidHeader = phoneHeader.filter(header => phoneTrimmed.includes(header)); \n        \n            return phoneIncludeValidHeader.length > 0 && phone.length === 10;\n        }\n\n        return false;\n        \n    }\n\n    /** TRANSACTION */\n    static nameValidate = (name) => {\n        if (name) {\n            return name.trim().length > 0;\n        }\n        return false;\n    }\n\n    static amountValidate = (amount) => {\n        if (amount) {\n            const value = parseInt(amount);\n\n            if (!value) {\n                return false;\n            }\n\n            return value > 1000 && !(value % 1000); \n        }\n        return false;\n    }\n}\n\n\n\nexport default validateHelper;","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport { Link } from 'react-router-dom';\n\nimport Button from '../Button';\n\nimport classes from './Buttons.module.css';\n\nconst Buttons = (props) => {\n    /**\n     * props: \n     *  - Each button = {} => props = [{}, {}, {}]\n     *  - {\n     *      name, \n     *      onClick, \n     *      type, \n     *      className, \n     *      isShown\n     *  }\n     */\n    return (\n        <div className={ `${classes.btnGroup} ${props.className}` }>\n            { props.btnList.map(btn => \n                (btn.isShown) && \n                    <Button\n                        key={ btn.name }\n                        type={ btn.type || 'button'}\n                        className={ btn.className }\n                        handleClick={ btn.onClick }>\n                            { btn.name }\n                    </Button>\n            ) }\n        </div>\n\n    );\n}\n\n\nexport default React.memo(Buttons);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Buttons_button__2ziV1\",\"portalBtn\":\"Buttons_portalBtn___Z6CZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"ModelView_card__Y-Q85\",\"card-input\":\"ModelView_card-input__3cZPU\",\"input\":\"ModelView_input__2XBfK\",\"action\":\"ModelView_action__22eXL\"};"],"sourceRoot":""}